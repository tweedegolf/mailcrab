name: "Build and release"

on:
  push:
    tags:
      - v*.*.*

jobs:
  frontend:
    name: Build frontend assets
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - uses: jetli/trunk-action@v0.4.0
        with:
          version: 'latest'

      - name: Build frontend
        run: trunk build
        working-directory: frontend

      - uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/dist

  build:
    name: Binaries for ${{ matrix.name }}
    needs: frontend
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        name:
          - linux-x86-64-gnu
          - linux-armv7-gnu
          - linux-arm64-gnu
          - linux-x86-64-musl
          - linux-arm64-musl
        include:
          - name: linux-x86-64-gnu
            os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            platform: ~
            cross: false

          - name: linux-armv7-gnu
            os: ubuntu-22.04
            target: armv7-unknown-linux-gnueabihf
            platform: ~
            cross: true

          - name: linux-arm64-gnu
            os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            platform: ~
            cross: true

          - name: linux-x86-64-musl
            os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
            platform: amd64
            cross: true

          - name: linux-arm64-musl
            os: ubuntu-22.04
            target: aarch64-unknown-linux-musl
            platform: arm64
            cross: true

    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/dist

      - name: Build
        uses: actions-rs/cargo@master
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --release --locked --target ${{ matrix.target }} --manifest-path backend/Cargo.toml

      - name: Copy binaries
        shell: bash
        run: |
          src="backend/target/${{ matrix.target }}/release/mailcrab-backend"
          dst="bin/mailcrab-${{ matrix.target }}-${{ github.ref_name }}"
          cp "$src" "$dst"
          sha256sum -b "$dst" > "$dst.sha256"
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            bin/mailcrab-*
            LICENCE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup docker buildx
        if: ${{ matrix.platform != null }}
        uses: docker/setup-buildx-action@v2

      - name: Login to dockerhub
        if: ${{ matrix.platform != null }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Copy binary
        if: ${{ matrix.platform != null }}
        run: |
          cp backend/target/${{ matrix.target }}/release/mailcrab-backend bin/${{ matrix.platform }}

      - name: Build docker image
        if: ${{ matrix.platform != null }}
        run: docker buildx build --push --platform=linux/${{ matrix.platform }} . -t marlonb/mailcrab:latest -t marlonb/mailcrab:${{ github.ref_name }}