name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Cache build assets
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          backend/target/
          frontend/target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Configure Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: wasm32-unknown-unknown

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Download trunk
      uses: jetli/trunk-action@v0.1.0
      with:
        version: 'latest'

    - name: Build target amd64
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --manifest-path backend/Cargo.toml

    - name: Build target arm64
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --target aarch64-unknown-linux-gnu --manifest-path backend/Cargo.toml

    - name: Copy binaries 
      run: |
        cp target/aarch64-unknown-linux-gnu/release/mailcrab-backend target/arm64
        cp target/release/mailcrab-backend target/amd64
      working-directory: ./backend

    - name: Build frontend
      run: trunk build
      working-directory: ./frontend

    - name: Build docker image
      run: docker buildx build --push --platform=linux/amd64,linux/arm64 . -t marlonb/mailcrab:latest
